# Executa a instalação e configuração do ArgoCD com privilégios elevados
# Cria namespace dedicado 'argocd' no cluster para isolar os recursos do ArgoCD
# Aplica os manifestos oficiais do ArgoCD obtidos diretamente do repositório público
# Aguarda todos os pods do ArgoCD ficarem em estado Running (timeout 5 minutos)
# Cria arquivo de configuração da aplicação ArgoCD com:
# - Definições de sincronização automática
# - Política de poda de recursos
# - Auto-recuperação
# - Opções de sincronização personalizadas
# Aplica o arquivo de configuração da aplicação no cluster
# Recupera a senha inicial do usuário admin do ArgoCD do secret do Kubernetes
# Exibe as credenciais de acesso e instruções:
# - Usuário padrão
# - Senha inicial
# - Opções de acesso (port-forward, ingress, loadbalancer)
# Remove o arquivo temporário de configuração
---
- name: Instala e configura ArgoCD
  become: true

- name: Cria namespace argocd
  kubernetes.core.k8s:
    name: argocd
    api_version: v1
    kind: Namespace
    state: present
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Instala ArgoCD
  kubernetes.core.k8s:
    state: present
    src: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Aguarda pods do ArgoCD estarem prontos
  kubernetes.core.k8s_wait:
    kind: Pod
    namespace: argocd
    label_selectors:
      - app.kubernetes.io/part-of=argocd
    field_selectors:
      - status.phase=Running
    timeout: 300
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Cria arquivo de configuração do ArgoCD
  copy:
    dest: /tmp/argocd-app.yaml
    content: |
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: recursos-cluster
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://github.com/seu-usuario/seu-repo
          targetRevision: HEAD
          path: resources
          directory:
            recurse: true
        destination:
          server: https://kubernetes.default.svc
          namespace: default
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true
            - PrunePropagationPolicy=foreground
            - PruneLast=true

- name: Aplica configuração do ArgoCD
  kubernetes.core.k8s:
    state: present
    src: /tmp/argocd-app.yaml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Obtém senha inicial do ArgoCD
  shell: |
    kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  register: argocd_password
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Mostra credenciais do ArgoCD
  debug:
    msg: |
      ArgoCD está instalado no namespace argocd
      Usuário: admin
      Senha: {{ argocd_password.stdout }}

      Para acessar o ArgoCD UI, você pode:
      1. Usar port-forward: kubectl port-forward svc/argocd-server -n argocd 8080:443
      2. Configurar um Ingress
      3. Usar um LoadBalancer

- name: Remove arquivo temporário
  file:
    path: /tmp/argocd-app.yaml
    state: absent
